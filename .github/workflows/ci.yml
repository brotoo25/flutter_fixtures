name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        flutter: [ {channel: stable, version: 3.32.4} ]
      fail-fast: false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2.21.0 
        with:
          channel: ${{ matrix.flutter.channel }}
          flutter-version: ${{ matrix.flutter.version }}
          cache: true                         

      - name: Get dependencies
        run: flutter pub get

      - name: Verify formatting
        run: dart format --output=none --set-exit-if-changed --line-length 100 .

      - name: Analyze project source
        run: flutter analyze

      # ---- Test individual packages ----
      - name: Test flutter_fixtures_dio
        working-directory: packages/flutter_fixtures_dio
        run: |
          flutter pub get
          flutter test

      - name: Test flutter_fixtures_ui
        working-directory: packages/flutter_fixtures_ui
        run: |
          flutter pub get
          flutter test

      - name: Test flutter_fixtures
        working-directory: packages/flutter_fixtures
        run: |
          flutter pub get
          flutter test

      - name: Build example app
        working-directory: example
        run: |
          flutter pub get
          flutter build apk --debug

  package-analysis:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: subosito/flutter-action@v2.21.0
        with:
          channel: stable
          cache: true

      - name: Install pana
        run: dart pub global activate pana

      - name: Analyze packages
        run: |
          for dir in packages/*; do
            echo "::group::Analyzing $dir"
            cd "$dir"
            flutter pub get
            echo "Running pana analysis..."
            pana --no-warning || echo "⚠️ Pana analysis completed with issues for $dir (this is expected for packages without examples)"
            cd -
            echo "::endgroup::"
          done

      - name: Dry-run publish check
        run: |
          for dir in packages/*; do
            echo "::group::Dry-run publish check for $dir"
            cd "$dir"
            echo "Checking if $(basename "$dir") is ready for publishing..."
            dart pub publish --dry-run || echo "❌ Publish check failed for $dir"
            cd -
            echo "::endgroup::"
          done